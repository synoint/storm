{% extends '/b4/layout/base.twig' %}
{% form_theme form 'b4/form_theme/syno.twig' %}
{% block title %}
    {{ page_prefix(survey, page)|trans }} -
    {% if survey.getPublicTitle() is not empty %}
        {{ survey.getPublicTitle() }}
    {% else %}
        {{ 'survey.title.default'|trans }} - Syno International
    {% endif %}
{% endblock %}
{% block body %}

    <div class="container">
        <div class="row container-sm justify-content-md-center ml-0">

            <div class="questions">
                {% if '' != page.content %}
                    <div class="col-12">
                        <div class="page__content rounded p-3 bg-white mb-5">
                            {{ page.content|raw }}
                        </div>
                    </div>
                {% endif %}

                <div class="col-12">
                    {{ form_start(form, {'attr': {'novalidate':'novalidate', 'autocomplete': 'off'}}) }}

                        {% for question in questions|sort ((a, b) => a.sortOrder <=> b.sortOrder) %}
                            <div class="question card mb-5 p-5 border-0">
                                <h5 class="text-center m-0 pb-4">
                                    {{ question.getText() }}
                                </h5>

                                {% if question.isMatrix %}
                                    {% include 'b4/page/_matrix.twig' %}
                                {% elseif question.isLinearScale %}
                                    {{ form_errors(attribute(form, (question.getInputName))) }}
                                    {{ form_row(attribute(form, (question.getInputName))) }}
                                {% elseif question.isLinearScaleMatrix %}
                                    {% set break = false %}
                                    {% for key,row in question.getRows() %}
                                        {% set errorMessage = form_errors(attribute(form, (question.getInputName(key)))) %}
                                        {% if errorMessage is not empty and break == false %}
                                            {{ errorMessage|raw }}
                                            {% set break = true %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for key,row in question.getRows() %}
                                        {{ form_row(attribute(form, (question.getInputName(key)))) }}
                                    {% endfor %}
                                {% elseif question.isText %}
                                    {% for answer in question.answers %}
                                        {{ form_errors(attribute(form, (question.getInputName(answer.answerId)))) }}
                                        {{ form_widget(attribute(form, (question.getInputName(answer.answerId))), {'label': false}) }}
                                    {% endfor %}
                                {% elseif question.questionTypeId == constant('Syno\\Storm\\Document\\Question::TYPE_SINGLE_CHOICE') %}
                                    {% include 'b4/page/_single_or_multiple_choice.twig' with { 'type': 'radio' } %}
                                {% elseif question.questionTypeId == constant('Syno\\Storm\\Document\\Question::TYPE_MULTIPLE_CHOICE') %}
                                    {% include 'b4/page/_single_or_multiple_choice.twig' with { 'type': 'checkbox' } %}
                                {% endif %}
                            </div>
                        {% endfor %}

                    <div class="row my-5 pb-5">
                        <div class="col text-center">
                            {% if backButtonDisabled == false %}
                                <button type="button" class="btn btn-outline-primary px-5 ml-2 mr-2"
                                        onclick="window.history.go(-1); return false;">
                                    {{ 'page.button.back'|trans }}
                                </button>
                            {% endif %}
                            {{ form_widget( form.next, { 'attr': {'class': 'btn btn-primary px-5 ml-2 mr-2'}, 'label': 'page.button.next'|trans } ) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% if (response.isDebug) %}

        {% include 'b4/page/_debug.twig' %}

    {% elseif (response.isTest) %}

        {% include 'b4/page/_test.twig' %}

    {% else %}

        {% include 'b4/page/_footer.twig' %}

    {% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('b4.page') }}

    {%  if page.hasVideo %}
        {{ encore_entry_script_tags('media.player') }}
    {% endif %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {%  if page.hasVideo %}
        {{ encore_entry_link_tags('media.player') }}
    {% endif %}
{% endblock %}