{% extends '/b4/layout/base.twig' %}
{% form_theme form 'b4/form_theme/syno.twig' %}

{% block title %}
    {% if '0' != survey_progress(survey, page) and 100 != survey_progress(survey, page) %}
        {{ survey_progress(survey, page) }}
    {% endif %}
    {{ page_prefix(survey, page)|trans }}
    
    {% if survey.getPublicTitle() is not empty %}
        - {{ survey.getPublicTitle() }}
    {% else %}
        - Syno International
    {% endif %}
{% endblock %}

{% block body %}
    
    <div class="container page-content">
        {% if '' != survey.getLogoPath %}
            <div class="row container-sm justify-content-md-center mb-2 mt-1">
                <div id="surveyLogoContainer">
                    <img id="surveyLogoImage" src="{{ survey.getLogoPath }}"/>
                </div>
            </div>
        {% endif %}
        
        {% if '' != page.content %}
            <div class="row container-sm justify-content-md-center ml-0">
                <div class="questions">
                    <div class="col-12">
                        <div class="page__content rounded bg-white">
                            {{ page.content|raw }}
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}
        
        <div class="row container-sm justify-content-md-center ml-0 my-3">
            <div class="questions">
                <div class="col-12">
                    {{ form_start(form, {'attr': {'novalidate':'novalidate', 'autocomplete': 'off'}}) }}
                    
                    {% for question in questions|sort ((a, b) => a.sortOrder <=> b.sortOrder) %}
                        <div id="q_{{ question.code }}_card" class="question card mb-5 p-5 border-0">
                            <h5 class="text-center m-0 pb-4">
                                {% if response.isTest or response.isDebug %}
                                    {{ question.code }}.&nbsp;
                                {% endif %}
                                {{ question.getText() ? title_string(responseDataLayer, question.getText())|raw : '' }}
                            </h5>
                            
                            {% if question.isMatrix %}
                                {% include 'b4/page/_matrix.twig' %}
                            {% elseif question.isLinearScale %}
                                {{ form_errors(attribute(form, (question.getInputName))) }}
                                {{ form_row(attribute(form, (question.getInputName))) }}
                            {% elseif question.isLinearScaleMatrix %}
                                {% set break = false %}
                                {% set rows = question.getRows() %}
                                {% if question.randomizeRows %}
                                    {% set rows = rows|shuffle_array() %}
                                {% endif %}
                                {% for key,row in rows %}
                                    {% set errorMessage = form_errors(attribute(form, (question.getInputName(key)))) %}
                                    {% if errorMessage is not empty and break == false %}
                                        {{ errorMessage|raw }}
                                        {% set break = true %}
                                    {% endif %}
                                {% endfor %}
                                {% for key,row in rows %}
                                    {{ form_row(attribute(form, (question.getInputName(key)))) }}
                                {% endfor %}
                            {% elseif question.isText or question.isMultiText %}
                                {% for answer in question.answers %}
                                    {% if '' != answer.label %}
                                        <div class="form-row">
                                            <div class="col-12">{{ answer.label | raw }}</div>
                                        </div>
                                    {% endif %}
                                    <div class="form-row">
                                        <div class="col-12 mb-2">
                                            {{ form_errors(attribute(form, (question.getInputName(answer.code)))) }}
                                            {{ form_widget(attribute(form, (question.getInputName(answer.code)), {'label': false})) }}
                                        </div>
                                    </div>
                                {% endfor %}
                            {% elseif question.questionTypeId == constant('Syno\\Storm\\Document\\Question::TYPE_SINGLE_CHOICE') %}
                                {% if question.containsSelectField %}
                                    {{ form_widget(attribute(form, (question.getInputName)), {"attr": {"class": "select2"}}) }}
                                {% else %}
                                    {% include 'b4/page/_single_or_multiple_choice.twig' with { 'type': 'radio' } %}
                                {% endif %}
                            {% elseif question.questionTypeId == constant('Syno\\Storm\\Document\\Question::TYPE_GABOR_GRANGER') %}
                                {% include 'b4/page/_gabor_granger.twig' %}
                            {% elseif question.questionTypeId == constant('Syno\\Storm\\Document\\Question::TYPE_MULTIPLE_CHOICE') %}
                                {% include 'b4/page/_single_or_multiple_choice.twig' with { 'type': 'checkbox' } %}
                            {% endif %}
                        </div>
                    {% endfor %}
                    
                    <div class="row pb-5">
                        <div class="col text-center">
                            {% if (false == backButtonDisabled and true == survey.getConfig.backButtonEnabled)
                                or response.isTest or response.isDebug %}
                                <button type="button" class="btn btn-outline-primary px-5 page-back-button"
                                        onclick="window.history.go(-1); return false;">
                                    {{ 'page.button.back'|trans }}
                                </button>
                            {% endif %}
                            
                            {% set buttonTitleTranslationKey = 'page.button.next' %}
                            {% if true == isLastPage %}
                                {% set buttonTitleTranslationKey = 'page.button.submit' %}
                            {% endif %}
                            
                            {{ form_widget( form.next, { 'attr': {'class': 'btn btn-primary px-5 page-next-button'}, 'label': buttonTitleTranslationKey|trans } ) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    {% if (response.isDebug) %}
        
        {% include 'b4/page/_debug.twig' %}
    
    {% elseif (response.isTest) %}
        
        {% include 'b4/page/_test.twig' %}
    
    {% else %}
        
        {% include 'b4/page/_footer.twig' %}
    
    {% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('b4.page.gabor_granger') }}
    {% if page.hasMedia %}
        {{ encore_entry_script_tags('media.player') }}
    {% endif %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {% if page.hasMedia %}
        {{ encore_entry_link_tags('media.player') }}
    {% endif %}
{% endblock %}
